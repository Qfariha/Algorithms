# -*- coding: utf-8 -*-
"""Task-3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11U1Jq-hfafCjyQcQYQmu9Lpy0s8OFYz9
"""

#Task-3
f1 = open('/content/drive/MyDrive/CSE221_Lab-01/Input3.txt',mode='r')
f2 = open('/content/drive/MyDrive/CSE221_Lab-01/Output3.txt',mode='w')
def bubbleSort(arr):
    flag=True
    for i in range(len(arr)-1):
        for j in range(len(arr)-i-1):
            if int(arr[j]) > int(arr[j+1]):
                arr[j], arr[j+1] = arr[j+1], arr[j]
                flag=False

        if flag==True:
          for k in range(len(arr)):
            f2.write(arr[k] + ' ')
            break
    if flag==False:
      for i in range(len(arr)):
        f2.write(arr[i] + ' ')  #'f2.write or file=f2

temp = f1.readline()  #read only the first line
#print(temp)
arr = f1.readline().split()  #already read the 1st line,now read the 2nd line and space split, output->list elem as strings 
#print(arr)

bubbleSort(arr)
f1.close()
f2.close()

#If the flag does not change,
#it means that the 1st inner loop was not entered during the first iteration of the outer loop.
#So, it can be said that the array was already sorted.
#For the best case scenario where the array is already sorted so the flag stays True
#the outer loop goes through one iteration 
#and the 2nd inner loop goes through n iterations
#Therefore,the time complexity is O(n).