# -*- coding: utf-8 -*-
"""Task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11U1Jq-hfafCjyQcQYQmu9Lpy0s8OFYz9
"""



#Task-2
f1=open('/content/drive/MyDrive/CSE221_Lab-03/Input2.txt',mode='r')
f2=open('/content/drive/MyDrive/CSE221_Lab-03/Output2.txt',mode='w')
l=f1.readline().split()
l1=[]
for num in l:
  l1.append(int(num))

def add (h, elem):

  size=len(h)-1
  size = size + 1
  h.append(elem)
  heapify(h, size)

def sink(arr,n,k):
    l = 2 * k + 1
    r = 2 * k + 2
    if l < n and arr[l] < arr[k]:
        smallest = l
    else:
        smallest = k
    if r < n and arr[r] < arr[smallest]:
        smallest = r
#sinking when lower index(k) val is greater than upper index
    if smallest != k:
        arr[k], arr[smallest] = arr[smallest], arr[k] 
        sink(arr,n, smallest)
def heapify(arr,i):
    smallest = i 
    
    parent = i // 2 

    if parent >=0 and int(arr[smallest]) < int(arr[parent]):

      #swim up when last index val is less then parent
#       print(arr)
      arr[smallest], arr[parent] = arr[parent], arr[smallest]
      smallest = parent
      heapify(arr, smallest)
    
def build(A):
  n = len(A)-1
  for k in range(n, 0, -1): 
    heapify(A,k)
def delete(A):
  n = len(A)-1
  for i in range(n,0,-1):
    A[0],A[i]=A[i],A[0]
  A.remove(A[n])
  heapify(A,i) #After removing the last idx, heapifying from the 2nd last
def sort(A):
  n = len(A)
  for i in range(n-1,0,-1):
    A[0],A[i]=A[i],A[0]  #swapping last elem with 0 idx elem(smallest)
    
    sink(A,i,0)
    
#[40,50,80,90,10,5] 

build(l1)   
print(l1) #built heap
var=input('Give a command:')
if var=="A":
  add(l1,100)
  print(l1)
  
if var=="B":
  delete(l1)
  print(l1)
  
if var=="C":
  sort(l1)
  print(l1)